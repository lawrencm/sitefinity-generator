{"version":3,"sources":["webpack://Sitefinity/webpack/universalModuleDefinition","webpack://Sitefinity/webpack/bootstrap","webpack://Sitefinity/./node_modules/tslib/tslib.es6.js","webpack://Sitefinity/./src/Authentication.ts","webpack://Sitefinity/./src/BlobBuilder.ts","webpack://Sitefinity/./src/ContentTypes.ts","webpack://Sitefinity/./src/Data.ts","webpack://Sitefinity/./src/Expression.ts","webpack://Sitefinity/./src/Headers.ts","webpack://Sitefinity/./src/HttpMethods.ts","webpack://Sitefinity/./src/OrderProperty.ts","webpack://Sitefinity/./src/Query.ts","webpack://Sitefinity/./src/QueryBase.ts","webpack://Sitefinity/./src/QueryBuilder.ts","webpack://Sitefinity/./src/Requests/BatchRequest.ts","webpack://Sitefinity/./src/Requests/ExecutableRequest.ts","webpack://Sitefinity/./src/Requests/Request.ts","webpack://Sitefinity/./src/Requests/RequestFactory.ts","webpack://Sitefinity/./src/Sitefinity.ts","webpack://Sitefinity/./src/WhereQuery.ts","webpack://Sitefinity/./src/constants.ts","webpack://Sitefinity/./src/main.ts","webpack://Sitefinity/./src/utils.ts"],"names":[],"mappings":"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","file":"sitefinity-webservices-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sitefinity\"] = factory();\n\telse\n\t\troot[\"Sitefinity\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n* @class Authentication\r\n* @classdesc The constructor of the Authentication object. This object is used for authenticating a user to Sitefinity.\r\n* @param {object} options - An object containing configuration options for the {@Link Authentication} object.\r\n* @param {string} options.serviceUrl - Your service url that points to the configured instance of Sitefinity service.\r\n*/\r\nexport class Authentication {\r\n    private _token: any;\r\n    private _serviceUrl: string;\r\n    private factory: any;\r\n\r\n    constructor(options) {\r\n        this._token = null;\r\n        this._serviceUrl = options.serviceUrl;\r\n        this.factory = options.factory;\r\n    }\r\n\r\n    /**\r\n    * Logins the user. A service call is made to login the user. If the call is successful and the service returns a token, this token is cached in the {@link Authentication} object.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {string} username - The username.\r\n    * @param {string} password - The password.\r\n    * @param {Function} [success] - The success handler of the method.\r\n    * @param {Function} [failure] - The error handler of the method.\r\n    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0\r\n    * @example\r\n    * sf.authentication.login(\"username\", \"password\", successCb, failureCb);\r\n    */\r\n    login(username: string, password: string, success: any, failure: any) {\r\n        var that = this;\r\n        var request = this.factory.create({\r\n            data: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            urlOptions: {\r\n                baseUrl: that._serviceUrl + 'login'\r\n            },\r\n            successCb: function (data) {\r\n                that.setToken(data.value);\r\n                if (typeof success === 'function')\r\n                    success(data.value);\r\n            },\r\n            failureCb: failure\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Logouts the user.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {Function} [success] - The success handler of the method.\r\n    * @param {Function} [failure] - The error handler of the method.\r\n    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0\r\n    */\r\n    logout(success: any, failure: any) {\r\n        var that = this;\r\n        var request = this.factory.create({\r\n            urlOptions: {\r\n                baseUrl: that._serviceUrl + 'logout',\r\n                token: that.getToken()\r\n            },\r\n            successCb: function (data) {\r\n                that.setToken(null);\r\n                if (typeof success === 'function')\r\n                    success(data);\r\n            },\r\n            failureCb: failure\r\n        });\r\n        request._execute();\r\n    }\r\n\r\n\r\n    /**\r\n    * Sets the authentication token.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {string} token - The token, which will be used for authentication.\r\n    */\r\n    setToken(token: any) {\r\n        this._token = token;\r\n    }\r\n\r\n    /**\r\n    * Gets the authentication token.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @returns {string}\r\n    */\r\n    getToken() {\r\n        return this._token;\r\n    }\r\n}\r\n","/**\r\n * @classdesc The BlobBuilder class is used to generate blob objects.\r\n * @class BlobBuilder\r\n */\r\nexport class BlobBuilder {\r\n    private _blob = new Blob();\r\n\r\n    /**\r\n    * Append new value to blob.\r\n    * @memberOf BlobBuilder\r\n    * @instance\r\n    * @param {object} value - The value to be appended.\r\n    */\r\n    append(value: any) {\r\n        this._blob = new Blob([this._blob, value]);\r\n    }\r\n\r\n    /**\r\n    * Get generated blob.\r\n    * @memberOf BlobBuilder\r\n    */\r\n    build() {\r\n        return this._blob;\r\n    }\r\n}\r\n","const contentTypes = {\r\n    json: \"application/json\"\r\n}\r\n\r\nexport default contentTypes;\r\n","/**\r\n* @class Data\r\n* @classdesc The constructor of the Data object. This object is used for requesting data from Sitefinity.\r\n* @param {object} urlOptions - An object containing configuration options for the {@link Data} object.\r\n* @param {string} urlOptions.baseUrl - Your service url that points to the configured instance of Sitefinity service.\r\n* @param {string} urlOptions.entitySet - The url name of the type.\r\n* @param {object} urlOptions.SFParams - An object containing configuration options for requests.\r\n* @param {string} urlOptions.SFParams.provider - The provider name to use in each request.\r\n* @param {string} urlOptions.SFParams.culture - The culture name to use in each request.\r\n*/\r\nexport class Data {\r\n    private urlOptions: any;\r\n    private factory: any;\r\n\r\n    constructor(urlOptions, factory) {\r\n        this.urlOptions = urlOptions;\r\n        this.factory = factory;\r\n    }\r\n\r\n    // TODO: rethink this\r\n    /**\r\n    * Executes a GET request to retrieve a collection of items.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {object} parameters.query - The {@link WhereQuery} with which to filter the items.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    get(parameters: any) {\r\n        parameters = parameters || {};\r\n\r\n        // TODO: move to Request\r\n        if (parameters.query)\r\n            this.urlOptions.ODataParams = parameters.query;\r\n\r\n        var request = this.factory.get({\r\n            urlOptions: this.urlOptions,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb,\r\n            fallbackProperties: parameters.fallbackProperties\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a GET request to retrieve an/all item(s) operations.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    getOperations(parameters: any) {\r\n        var request;\r\n        var action = \"operations\";\r\n\r\n        // Set parentId if no item key is passed\r\n        if (!parameters.key)\r\n            action += \"?parentId=\" + parameters.parentId;\r\n\r\n        var params: any = {\r\n            urlOptions: this.urlOptions,\r\n            action: action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        };\r\n\r\n        if (parameters.key) {\r\n            params.key = parameters.key;\r\n            request = this.factory.getSingle(params);\r\n        } else {\r\n            request = this.factory.get(params);\r\n        }\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a GET request for a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link QueryBase} object containing the OData query options that should be sent to the server.\r\n    * @param {string} parameters.key - The identifier of the item to be retrieved.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    getSingle(parameters: any) {\r\n        if (!(parameters.key))\r\n            throw \"Parameter 'key' is required!\";\r\n\r\n        if (parameters.query)\r\n            this.urlOptions.ODataParams = parameters.query;\r\n\r\n        var request = this.factory.getSingle({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb,\r\n            fallbackProperties: parameters.fallbackProperties\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a POST request for a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    create(parameters: any) {\r\n        if (!(parameters.data))\r\n            throw \"Parameter 'data' is required!\";\r\n\r\n        var request = this.factory.create({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            data: parameters.data,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a PATCH request to update a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {bool} parameters.saveTemp - A flag indicating whether to save in temp.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    * @example\r\n    * var data = sf.data({\r\n    *     urlName: \"newsitems\",\r\n    *     providerName: \"OpenAccessDataProvider\",\r\n    *     cultureName: \"en\"\r\n    * });\r\n    *\r\n    * var newsItemUpdate =  {\r\n    *    \"Title\": 'updated news title'\r\n    * };\r\n    *\r\n    * data.update({\r\n    *   key: '00000000-0000-0000-0000-000000000000', // key of item to update\r\n    *   data: newsItemUpdate,\r\n    *   saveTemp: true,\r\n    *   successCb: successCb,\r\n    *   failureCb: failureCb\r\n    * });\r\n    */\r\n    update(parameters: any) {\r\n        if (!(parameters.key || parameters.data))\r\n            throw \"Parameters: 'data' and 'key' are required!\";\r\n\r\n        var request = this.factory.update({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            data: parameters.data,\r\n            action: parameters.action,\r\n            saveTemp: parameters.saveTemp,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a DELETE request to delete a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be deleted.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    destroy(parameters: any) {\r\n        if (!(parameters.key))\r\n            throw \"Parameter 'key' is required!\";\r\n\r\n        var request = this.factory.destroy({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a POST request to execute a workflow operation for single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    operation(parameters: any) {\r\n        if (!(parameters.key || parameters.data))\r\n            throw \"Parameters: 'data' and 'key' are required!\";\r\n\r\n        var request = this.factory.create({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            action: \"operation\",\r\n            data: parameters.data,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a GET request to get the property of a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.property - The name of the property to be retrieved.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    getProperty(parameters: any) {\r\n        if (!(parameters.key || parameters.property))\r\n            throw \"Parameters: 'data' and 'property' are required!\";\r\n\r\n        var request = this.factory.getProperty({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.property,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a GET request to get the related property value of a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    getRelated(parameters: any) {\r\n        if (!(parameters.key || parameters.navigationProperty))\r\n            throw \"Parameters: 'data' and 'navigationProperty' are required!\";\r\n\r\n        var request = this.factory.getRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a GET request to retrieve the related property value of a single item by the id of the related item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    getRelatedById(parameters: any) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.relatedKey))\r\n            throw \"Parameters: 'data', 'relatedKey' and 'navigationProperty' are required!\";\r\n\r\n        var request = this.factory.getRelatedById({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a DELETE request to retrieve the delete all of the associated members in the relation property.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    destroyRelated(parameters: any) {\r\n        if (!(parameters.key || parameters.navigationProperty))\r\n            throw \"Parameters: 'data' and 'navigationProperty' are required!\";\r\n\r\n        var request = this.factory.destroyRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a DELETE request to retrieve the a single entry of the associated members in the relation property.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    destroyRelatedById(parameters: any) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.relatedKey))\r\n            throw \"Parameters: 'data', 'relatedKey' and 'navigationProperty' are required!\";\r\n\r\n        var request = this.factory.destroyRelatedById({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a POST request to add a related item to the property collection.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.link - The URL of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    createRelated(parameters: any) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.link))\r\n            throw \"Parameters: 'data', 'link' and 'navigationProperty' are required!\";\r\n\r\n        var data = {\r\n            \"@odata.id\": parameters.link\r\n        }\r\n\r\n        var request = this.factory.createRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            data: data,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n\r\n        request._execute();\r\n    }\r\n\r\n    /**\r\n    * Executes a POST request to upload a media item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.data - The data to be uploaded.\r\n    * @param {string} parameters.data.content - The base64 representation of the media item.\r\n    * @param {string} parameters.data.contentType - The content type of the item. E.g. image/jpeg.\r\n    * @param {string} parameters.data.name - The name of the media item.\r\n    * @param {string} parameters.data.payload - Holds the JSON metadata about the image. E.g. Title, Urlname etc.\r\n    * @param {string} parameters.data.uploadProperties - The properties passed on upload. Must contain ParentId and can contain FolderId, Title, UrlName, etc.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    * @example\r\n    *\r\n    * var data = sf.data({\r\n    *     urlName: \"images\"\r\n    * });\r\n    * data.upload({\r\n    *     data: {\r\n    *         content: \"base 64 representation of the file\",\r\n    *         contentType: \"image/jpeg\",\r\n    *         name: \"test.jpg\",\r\n    *         payload: {\r\n    *             Title: \"Test\",\r\n    *             UrlName: \"test\"\r\n    *         },\r\n    *         uploadProperties: {\r\n    *             ParentId: \"4BA7AD46-F29B-4E65-BE17-9BF7CE5BA1FB\"\r\n    *         }\r\n    *     },\r\n    *     successCb: successCb,\r\n    *     failureCb: failureCb\r\n    * });\r\n    */\r\n    upload(parameters: any) {\r\n        if (!(parameters || parameters.data || parameters.data.content || parameters.data.contentType || parameters.data || parameters.data.name || parameters.data.uploadProperties))\r\n            throw \"parameters: content, contentType, name and uploadProperties are required!\";\r\n\r\n        var options = {\r\n            urlOptions: this.urlOptions,\r\n            _factory: this.factory,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        }\r\n\r\n        var batch = this.factory.batch(options);\r\n        var transaction = batch.beginTransaction();\r\n\r\n        var uploadedFile = transaction.upload({\r\n            entitySet: this.urlOptions.entitySet,\r\n            data: parameters.data.content,\r\n            contentType: parameters.data.contentType,\r\n            fileName: parameters.data.name,\r\n            uploadProperties: parameters.data.uploadProperties\r\n        });\r\n\r\n        if (parameters.data.payload)\r\n            transaction.update({\r\n                entitySet: this.urlOptions.entitySet,\r\n                key: uploadedFile,\r\n                data: parameters.data.payload\r\n            });\r\n\r\n        if (parameters.publish === true) {\r\n            transaction.operation({\r\n                entitySet: this.urlOptions.entitySet,\r\n                key: uploadedFile,\r\n                data: {\r\n                    action: \"Publish\"\r\n                }\r\n            });\r\n        }\r\n\r\n        batch.endTransaction(transaction);\r\n        var executor = this.factory.createExecutor(batch);\r\n        executor._execute();\r\n    }\r\n}\r\n\r\n","export class ExpressionBase {\r\n    constructor(public type: string) {\r\n\r\n    }\r\n\r\n    getType(): string {\r\n        return this.type;\r\n    }\r\n}\r\n\r\nexport class BinaryExpression extends ExpressionBase {\r\n    constructor(type: string, public parameter: string, public constant: any) {\r\n        super(type);\r\n    }\r\n\r\n    getParameter(): string {\r\n        return this.parameter;\r\n    }\r\n\r\n    getConstant(): any {\r\n        return this.constant;\r\n    }\r\n}\r\n\r\nexport class ComplexExpression extends ExpressionBase {\r\n    constructor (type: string, private expressions: ExpressionBase[]) {\r\n        super(type);\r\n    }\r\n\r\n    getExpressions(): ExpressionBase[] {\r\n        return this.expressions;\r\n    }\r\n}\r\n","export var headerNames = {\r\n    contentType: \"Content-Type\",\r\n    authorization: \"Authorization\",\r\n    contentEncoding: \"Content-Encoding\",\r\n\r\n    operation: \"X-Operation\",\r\n    properties: \"X-Sf-Properties\",\r\n    fileName: \"X-File-Name\",\r\n    serviceRequest: \"X-SF-Service-Request\",\r\n    choicesBinaryRepresentation: \"X-SF-Binary-Choice-Representation\"\r\n}\r\n","const methods = {\r\n    Get: \"GET\",\r\n    Put: \"PUT\",\r\n    Post: \"POST\",\r\n    Patch: \"PATCH\",\r\n    Delete: \"DELETE\"\r\n};\r\n\r\nexport default methods;\r\n","import { utils } from './utils';\r\n\r\n\r\nexport class OrderProperty {\r\n    constructor(private propertyPath: string, private isDesc: boolean = null) {\r\n        if (!utils.isString(propertyPath))\r\n            throw new Error('Property name is not a valid string');\r\n\r\n        propertyPath = propertyPath.trim();\r\n\r\n        var parts = propertyPath.split(' ');\r\n        // parts[0] is the propertyPath; [1] would be whether descending or not.\r\n        if (parts.length > 1 && isDesc !== true && isDesc !== false) {\r\n            isDesc = parts[1].toLowerCase() == 'desc';\r\n            if (!isDesc) {\r\n                // isDesc is false but check to make sure its intended.\r\n                var isAsc = parts[1].toLowerCase() == 'asc';\r\n                if (!isAsc) {\r\n                    throw new Error(\"the second word in the propertyPath must begin with 'desc' or 'asc'\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.propertyPath = parts[0];\r\n        this.isDesc = isDesc;\r\n    }\r\n\r\n    getPropertyPath(): string {\r\n        return this.propertyPath;\r\n    }\r\n\r\n    getDirection(): boolean {\r\n        return this.isDesc;\r\n    }\r\n\r\n    getValue() {\r\n        var direction = (this.isDesc) ? 'desc' : 'asc';\r\n        return this.propertyPath + ' ' + direction;\r\n    }\r\n}\r\n","import { QueryBase } from './QueryBase';\r\nimport { WhereQuery } from './WhereQuery';\r\nimport { OrderProperty } from './OrderProperty';\r\nimport { QueryBuilder } from './QueryBuilder';\r\n\r\n/**\r\n * @classdesc The query class is used for constructing queries.\r\n * @class Query\r\n * @augments QueryBase\r\n * @example\r\n * var query = new Sitefinity.Query();\r\n * var query0 = query.where().and().endsWith(\"Title\", \"Record\").done().or().startsWith('Title', 'asd').done().done();\r\n * var query1 = query.where().or().endsWith(\"Record\", \"Title\").ne('age', '15').eq('Content', 'test').done().done();\r\n * var query2 = query.where().and().endsWith(\"Title\", \"Record\").done().done();\r\n * var query3 = query.where().endsWith(\"Record\", \"Title\").or().ne('age', '15').eq('Content', 'test').done().done();\r\n * var query4 = query.where().not().endsWith(\"Record\", \"Title\").done().and().not().eq('Content', 'test').done().done().done();\r\n * var query5 = query.where().not().and().endsWith(\"Record\", \"Title\").eq('Content', 'test').done().done().done();\r\n * var query6 = query.select(\"Id\", \"Title\", \"Content\").expand('Tags').order(\"Title desc\").where().ne('Title', 'zzz').eq('Title', 'newTitle').done()//.count();\r\n * var query7 = query.order(\"Title desc\").where().eq('Title', 'newTitleUPDATE1').done().select(\"Title\", \"Content\");\r\n * var query8 = query.where().eq('Title', 'newTitleN11').done();\r\n */\r\nexport class Query extends QueryBase {\r\n    protected _order: any = null;\r\n    protected _skip: any = null;\r\n    protected _take: any = null;\r\n    protected _search: any = null;\r\n    protected _count: any = null;\r\n    private expr: any = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n    * Begins a where clause for filtering the items.\r\n    * @memberOf Query\r\n    * @returns {@link WhereQuery}\r\n    */\r\n    where() {\r\n        var clone = this._clone((newObj) => {\r\n            newObj.expr = new WhereQuery(newObj);\r\n        });\r\n\r\n        return clone.expr;\r\n    }\r\n\r\n\r\n    /**\r\n    * Specifies the order by clause.\r\n    * @memberOf Query\r\n    * @example\r\n    * // filter by single field\r\n    * order(\"Title desc\")\r\n    * @example\r\n    * // filter by multiple fields\r\n    * order(\"Title desc\", \"Description asc\")\r\n    * @returns {@link Query}\r\n    */\r\n    order() {\r\n        var orderPropPaths = this._extractArguments(arguments);\r\n        this._validatePropertyPaths(orderPropPaths);\r\n\r\n        return this._clone(function (newObj) {\r\n            var orderItems = [];\r\n            for (var i = 0; i < orderPropPaths.length; i++) {\r\n                var member = orderPropPaths[i];\r\n                var orderProp = new OrderProperty(member);\r\n                orderItems.push(orderProp);\r\n            }\r\n            newObj._order = orderItems;\r\n        });\r\n    }\r\n\r\n    /** Skips a certain number of items from the beginning before returning the rest of the items. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @method skip\r\n    * @see [query.take]{@link query.take}\r\n    * @param {number} value The number of items to skip.\r\n    * @returns {Query}\r\n    */\r\n    skip(value: number) {\r\n        // validate\r\n        return this._clone((newObj) => {\r\n            newObj._skip = value;\r\n        });\r\n    }\r\n\r\n    /** Takes a specified number of items from the query result. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @param {number} value The number of items to take.\r\n    * @returns {Query}\r\n    */\r\n    take(value: number) {\r\n        return this._clone(function (newObj) {\r\n            newObj._take = value;\r\n        });\r\n    }\r\n\r\n    /** Searches for the items matching the specified expression.\r\n    * @memberOf Query.prototype\r\n    * @param {string} value The search expression.\r\n    * @returns {Query}\r\n    */\r\n    search(value: string) {\r\n        return this._clone(function (newObj) {\r\n            newObj._search = value;\r\n        });\r\n    }\r\n\r\n    /** Returns the total item count with the result. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @param {inline} inline Whether to return only the count of the items with or without their JSON representation.\r\n    * @returns {Query}\r\n    */\r\n    count(inline: boolean = true) {\r\n        return this._clone(function (newObj) {\r\n            newObj._count = inline;\r\n        });\r\n    }\r\n\r\n    _getFilter() {\r\n        return this.expr;\r\n    }\r\n\r\n    _getOrderBy() {\r\n        return this._order;\r\n    }\r\n\r\n    build() {\r\n        return new QueryBuilder(this).build();\r\n    }\r\n}\r\n","import { utils } from './utils';\r\n\r\n/**\r\n * @classdesc The base class for dealing with queries.\r\n * @class QueryBase\r\n */\r\nexport class QueryBase {\r\n    private _select: any;\r\n    private _expand: any;\r\n    constructor() {\r\n        this._select = null;\r\n        this._expand = null;\r\n    }\r\n\r\n    /**\r\n    * Selects which fields will be returned when querying the service.\r\n    * @memberOf QueryBase\r\n    * @instance\r\n    * @param {string} arguments - an array of fields to include in the $select statement.\r\n    * @returns {QueryBase}\r\n    */\r\n   select() {\r\n        var selectPropPaths = this._extractArguments(arguments);\r\n\r\n        this._validatePropertyPaths(selectPropPaths);\r\n\r\n        return this._clone((newObj) => {\r\n            newObj._select = selectPropPaths;\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Selects which navigation properties will be returned when querying the service.\r\n    * @memberOf QueryBase\r\n    * @instance\r\n    * @param {string} arguments - an array of fields to include in the $expand statement.\r\n    * @returns {QueryBase}\r\n    */\r\n    expand() {\r\n        var propPaths = this._extractArguments(arguments);\r\n        this._validatePropertyPaths(propPaths);\r\n\r\n        return this._clone(function (newObj) {\r\n            newObj._expand = propPaths;\r\n        });\r\n    }\r\n\r\n    _extractArguments(arg: IArguments) {\r\n        var values = [];\r\n        for (var index = 0; index < arg.length; index++) {\r\n            values.push(arg[index]);\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    _getSelect() {\r\n        return this._select;\r\n    }\r\n\r\n    _getExpand() {\r\n        return this._expand;\r\n    }\r\n\r\n    _validatePropertyPaths(propPaths: any, allowNested: boolean = false) {\r\n        for (var i = 0; i < propPaths.length; i++) {\r\n            var member = propPaths[i];\r\n            if (!utils.isString(member)) {\r\n                throw new Error('Invalid argument in clause');\r\n            }\r\n\r\n            if (!allowNested && member.indexOf('.') > -1) {\r\n                throw new Error('Invalid argument in clause');\r\n            }\r\n        }\r\n    }\r\n\r\n    _clone(setter: any = null) {\r\n        var newObj = utils.clone(this, new QueryBase(), setter);\r\n\r\n        return newObj;\r\n    }\r\n}\r\n","import { WhereQuery } from './WhereQuery';\r\nimport { ComplexExpression, BinaryExpression } from './Expression';\r\nimport { OrderProperty } from './OrderProperty';\r\nimport { utils } from './utils';\r\n\r\nvar constants = require('./constants').default;\r\n\r\nexport class QueryBuilder {\r\n    constructor(private query: any) {\r\n\r\n    }\r\n\r\n    build(): any {\r\n        var queryParameters = {};\r\n        this._buildODataQueryParams(this.query, queryParameters);\r\n        return queryParameters;\r\n    }\r\n\r\n    private _buildODataQueryParams(query, queryParameters) {\r\n        var queryParams = constants.ODataParams;\r\n\r\n        var whereClause = query._getFilter();\r\n        if (whereClause instanceof WhereQuery) {\r\n            var expression = whereClause._getExpression();\r\n            if (expression instanceof ComplexExpression) {\r\n                var result = this._buildComplexExpression(expression, null);\r\n                if (result) {\r\n                    queryParameters[queryParams.$filter] = result;\r\n                }\r\n            }\r\n        }\r\n\r\n        var selectClause = query._getSelect();\r\n        if (selectClause instanceof Array) {\r\n            queryParameters[queryParams.$select] = selectClause.join(', ');\r\n        }\r\n\r\n        var expandClause = query._getExpand();\r\n        if (expandClause instanceof Array)\r\n            queryParameters[queryParams.$expand] = expandClause.join(', ');\r\n\r\n        var orderByClause = query._order;\r\n        if (orderByClause instanceof Array) {\r\n            var order = [];\r\n            for (var i in orderByClause) {\r\n                if (orderByClause[i] instanceof OrderProperty)\r\n                    order.push(orderByClause[i].getValue());\r\n            }\r\n            queryParameters[queryParams.$orderby] = order.join(', ');\r\n        }\r\n\r\n        var take = query._take;\r\n        if (utils.isNumber(take))\r\n            queryParameters[queryParams.$top] = take;\r\n\r\n        var skip = query._skip;\r\n        if (utils.isNumber(skip))\r\n            queryParameters[queryParams.$skip] = skip;\r\n\r\n        var search = query._search;\r\n        if (search)\r\n            queryParameters[queryParams.$search] = search;\r\n\r\n        var count = query._count;\r\n\r\n        // means that the count is required inline\r\n        if (count !== null) {\r\n            queryParameters[queryParams.$count] = count;\r\n        }\r\n\r\n        return queryParameters;\r\n    }\r\n\r\n    private _buildComplexExpression(expression, parent) {\r\n        if (!(expression instanceof ComplexExpression))\r\n            throw new Error('Invalid complex expression');\r\n\r\n        var OperatorType = constants.ExpressionType;\r\n        var counter = 0;\r\n        var result = '';\r\n        var subExpressions = expression.getExpressions();\r\n        if (!subExpressions.length) {\r\n            return result;\r\n        }\r\n\r\n        while (true) {\r\n            var currentExp = subExpressions[counter];\r\n            if (currentExp instanceof BinaryExpression) {\r\n                result += this._buildBinaryExpression(currentExp);\r\n            }\r\n            else if (currentExp instanceof ComplexExpression) {\r\n                var complexResult = this._buildComplexExpression(currentExp, expression.type);\r\n                if (complexResult) {\r\n                    result += '(' + complexResult + ')';\r\n                }\r\n            }\r\n\r\n            if (expression.getType() === OperatorType.not)\r\n                result = expression.getType() + ' ' + result;\r\n            // TODOSDK: Rethink this!\r\n            if (expression.getType() === OperatorType.any) {\r\n                var exprVal = [];\r\n                for (var index = 0; index < subExpressions.length; index++) {\r\n                    if (subExpressions[index].type == OperatorType.contains || subExpressions[index].type == OperatorType.startsWith || subExpressions[index].type == OperatorType.endsWith)\r\n                        exprVal.push(subExpressions[index].type.toLowerCase() + \"(x, '\" + (subExpressions[index] as BinaryExpression).constant + \"')\");\r\n                    else\r\n                        exprVal.push('x ' + subExpressions[index].type.toLowerCase() + ' ' + this._checkType((subExpressions[index] as BinaryExpression).constant));\r\n                }\r\n                result = (currentExp as BinaryExpression).parameter + '/' + expression.getType() + '(x:' + exprVal.join(' ' + parent + ' ') + ')';\r\n            }\r\n\r\n            counter++;\r\n            if (counter == subExpressions.length)\r\n                break;\r\n\r\n            result += ' ' + expression.getType() + ' ';\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _buildBinaryExpression(expression) {\r\n        if (!(expression instanceof BinaryExpression))\r\n            throw new Error('Invalid binary expression');\r\n\r\n        var ExpressionType = constants.ExpressionType;\r\n        var result = null;\r\n        var type = expression.getType();\r\n        switch (type) {\r\n            case ExpressionType.eq:\r\n            case ExpressionType.ne:\r\n            case ExpressionType.lt:\r\n            case ExpressionType.le:\r\n            case ExpressionType.gt:\r\n            case ExpressionType.ge:\r\n                var constant = expression.getConstant();\r\n                /*var template = '({0} {1} \\'{2}\\')';\r\n                if (/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(constant))\r\n                    template = '({0} {1} {2})';*/\r\n\r\n                result = `(${expression.getParameter()} ${type} ${this._checkType(constant)})`;\r\n                break;\r\n                // TODO contains is substringOf in Odata ?\r\n            case ExpressionType.contains:\r\n            case ExpressionType.startsWith:\r\n            case ExpressionType.endsWith:\r\n                result = `${type.toLowerCase()}(${expression.getParameter()}, ${this._checkType(expression.getConstant())})`;\r\n                break;\r\n            default:\r\n                var msg = `Unsupported operator ${type}`;\r\n                throw new Error(msg);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _checkType(constant: any) {\r\n        if (this._isGuid(constant))\r\n            return constant;\r\n\r\n        if (constant == null)\r\n            return null;\r\n\r\n        constant = constant.replace(/[+/?%#&]/g, function($0) {\r\n            return encodeURIComponent($0);\r\n        });\r\n\r\n         // escapes the apostrophes\r\n        constant = constant.replace(/'/g,\"''\");\r\n\r\n        return \"'\" + constant + \"'\";\r\n    }\r\n\r\n    private _isGuid(constant: string) {\r\n        return /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(constant);\r\n    }\r\n}\r\n","import { RequestFactory } from \"./RequestFactory\";\r\nimport { RequestBase } from './Request';\r\nimport { BlobBuilder } from '../BlobBuilder';\r\nimport { utils } from '../utils';\r\n\r\nvar headerNames = require(\"../Headers\").headerNames;\r\nvar httpMethods = require(\"../HttpMethods\").default;\r\n\r\n/**\r\n * @classdesc The transaction class is used to group operations that involve data manipulation together and execute them as a single atomic operation.\r\n * @class Transaction\r\n * @param {object} urlOptions - The url options that are passed to the {@link _factory} object.\r\n * @param {object} _factory - The factory object used for request generation.\r\n */\r\nclass Transaction {\r\n    private urlOptions: any;\r\n    private _factory: RequestFactory;\r\n    private _requests: any[];\r\n    public id: number;\r\n    public _counter: number;\r\n\r\n    constructor(urlOptions, _factory) {\r\n        this.urlOptions = urlOptions;\r\n        this._factory = _factory;\r\n        this._requests = [];\r\n        this._counter = 0;\r\n    }\r\n\r\n    upload(parameters: any) {\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            data: parameters.data,\r\n            contentType: parameters.contentType,\r\n            fileName: parameters.fileName,\r\n            key: parameters.key,\r\n            uploadProperties: JSON.stringify(parameters.uploadProperties)\r\n        };\r\n\r\n        var request = this._factory.upload(options);\r\n\r\n        return this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a POST request to create a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    create(parameters: any) {\r\n        if (!(parameters || parameters.entitySet))\r\n            throw \"entitySet is required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            key: parameters.key,\r\n            action: parameters.action,\r\n            urlOptions: urlOptions,\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n\r\n        var request = this._factory.create(options);\r\n\r\n        return this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a POST request to execute an operation on single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    operation(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.data))\r\n            throw \"parameters: entitySet, key and data are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            action: 'operation',\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n\r\n        var request = this._factory.create(options);\r\n\r\n        this._overrideUrlGeneration(request, parameters.key, 'operation', options.urlOptions);\r\n        this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a PATCH request to update a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {bool} parameters.saveTemp - A flag indicating whether to save in temp.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    update(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.data))\r\n            throw \"parameters: entitySet, key and data are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            saveTemp: parameters.saveTemp,\r\n            key: parameters.key,\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n\r\n        var request = this._factory.update(options);\r\n\r\n        this._overrideUrlGeneration(request, parameters.key, undefined, options.urlOptions);\r\n        this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a DELETE request to delete a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be deleted.\r\n    */\r\n    destroy(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key\r\n        };\r\n\r\n        var request = this._factory.destroy(options);\r\n\r\n        this._overrideUrlGeneration(request, parameters.key, undefined, options.urlOptions);\r\n\r\n        this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a DELETE request to retrieve the delete all of the associated members in the relation property.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    */\r\n    destroyRelated(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n\r\n        var request = this._factory.destroyRelated(options);\r\n\r\n        var navigationPropertyURL = (request as any).navigationProperty + '/$ref';\r\n        this._overrideUrlGeneration(request, parameters.key, navigationPropertyURL, options.urlOptions);\r\n\r\n        this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a DELETE request to retrieve the a single entry of the associated members in the relation property.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    */\r\n    destroyRelatedById(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.relatedKey || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, relatedKey and navigationProperty are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n\r\n        var request = this._factory.destroyRelatedById(options);\r\n\r\n        this.addRequest(this, request);\r\n    }\r\n\r\n    /**\r\n    * Adds a POST request to add a related item to the property collection.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @see {@link Data.createRelated}\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property\r\n    */\r\n    createRelated(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.link || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, link and navigationProperty are required!\";\r\n\r\n        // TODO: rethink about the urls\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n            if (this._requests[index].id == parameters.link) {\r\n                parameters.link = \"$\" + this._requests[index].id;\r\n            }\r\n        }\r\n\r\n        var data = {\r\n            '@odata.id': parameters.link\r\n        }\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            data: JSON.stringify(data)\r\n        };\r\n\r\n        var request = this._factory.createRelated(options);\r\n        var navigationPropertyURL = (request as any).navigationProperty + '/$ref';\r\n        this._overrideUrlGeneration(request, parameters.key, navigationPropertyURL, options.urlOptions);\r\n\r\n        return this.addRequest(this, request);\r\n    }\r\n\r\n    _overrideUrlGeneration(request: any, key: string, additionalPropertyURL: string, sfParams: any) {\r\n        // TODO: match requests with Content-ID's!\r\n        // Content-ID's are the same as id's in _requests.\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n            if (this._requests[index].id == key) {\r\n                request._buildUrl = function () {\r\n                    var uri = \"$\" + key;\r\n                    if (additionalPropertyURL !== undefined) {\r\n                        uri = uri + '/' + additionalPropertyURL;\r\n                    }\r\n\r\n                    if (sfParams) {\r\n                        var queryString = request._getQueryString(sfParams);\r\n                        if (queryString) {\r\n                            uri = uri + queryString;\r\n                        }\r\n                    }\r\n\r\n                    return uri;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addRequest(that: any, request) {\r\n        that._requests.push({ \"id\": that._counter, \"request\": request });\r\n        return that._counter++;\r\n    }\r\n\r\n    urlParametersClone(entitySet: string) {\r\n        var options = utils.clone(this.urlOptions);\r\n        options.entitySet = entitySet;\r\n\r\n        return options;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc The batch request class is used for grouping requests into a single batch request to execute on the server.\r\n * @class BatchRequest\r\n */\r\nclass BatchRequest extends RequestBase {\r\n    private _factory: RequestFactory;\r\n    private _requests: any[];\r\n    private _counter: number;\r\n    private boundary: any;\r\n    private responseHeaderRegex: RegExp;\r\n    private responseStatusRegex: RegExp;\r\n    public static constants = {\r\n        newLine: '\\r\\n'\r\n    };\r\n\r\n    constructor(options) {\r\n        super(options);\r\n        this._factory = options._factory;\r\n        this._requests = [];\r\n        this._counter = 0;\r\n        this.boundary = this._createBoundary(\"sf_batch_\");\r\n        this.responseHeaderRegex = /^([^()<>@,;:\\\\\"\\/[\\]?={} \\t]+)\\s?:\\s?(.*)/;\r\n        this.responseStatusRegex = /^HTTP\\/1\\.\\d (\\d{3}) (.*)$/i;\r\n    }\r\n\r\n    /**\r\n    * Adds a GET request to retrieve a collection of items.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link WhereQuery} with which to filter the items\r\n    */\r\n    get(parameters: any) {\r\n        if (!(parameters || parameters.entitySet))\r\n            throw \"entitySet is required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        if (parameters && parameters.query)\r\n            urlOptions.ODataParams = parameters.query;\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            fallbackProperties: parameters.fallbackPropertyNames\r\n        };\r\n\r\n        var request = this._factory.get(options);\r\n\r\n        this.addRequest(request);\r\n    }\r\n\r\n    /**\r\n    * Adds a GET request for the retrieval of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link QueryBase} object containing the OData query options that should be sent to the server.\r\n    * @param {string} parameters.key - The identifier of the item to be retrieved.\r\n    */\r\n    getSingle(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options: any = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key\r\n        };\r\n\r\n        if (parameters.query)\r\n            options.ODataParams = parameters.query;\r\n\r\n        var request = this._factory.getSingle(options);\r\n\r\n        this.addRequest(request);\r\n    }\r\n\r\n    /**\r\n    * Adds a GET request to get the property of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.property - The name of the property to be retrieved.\r\n    */\r\n    getProperty(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key, parameters.property))\r\n            throw \"parameters: entitySet, key and property are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.property\r\n        };\r\n\r\n        var request = this._factory.getProperty(options);\r\n\r\n        this.addRequest(request);\r\n    }\r\n\r\n    /**\r\n    * Adds a GET request to get the related property value of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    */\r\n    getRelated(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key and navigationProperty are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n\r\n        var request = this._factory.getRelated(options);\r\n\r\n        this.addRequest(request);\r\n    }\r\n\r\n    /**\r\n    * Adds a GET request to retrieve the related property value of a single item by the id of the related item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    */\r\n    getRelatedById(parameters: any) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.relatedKey || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, relatedKey and navigationProperty are required!\";\r\n\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n\r\n        var request = this._factory.getRelatedById(options);\r\n\r\n        this.addRequest(request);\r\n    }\r\n\r\n    /**\r\n    * Begins a transaction.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @returns {@link Transaction}\r\n    */\r\n    beginTransaction() {\r\n        var option = utils.clone(this.urlOptions);\r\n        const newTransaction = new Transaction(option, this._factory);\r\n        newTransaction.id = ++this._counter;\r\n        return newTransaction;\r\n    }\r\n\r\n    /**\r\n    * Ends a transaction.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    */\r\n    endTransaction(transaction: any) {\r\n        this._requests.push({\r\n            id: transaction.id,\r\n            request: transaction\r\n        });\r\n    }\r\n\r\n    _getBody() {\r\n        return this._buildRequestBody();\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Post;\r\n    }\r\n\r\n    _getHeaders() {\r\n        var contentType = \"multipart/mixed; boundary=\" + this.boundary;\r\n        var headers = { };\r\n        headers[headerNames.contentType] = contentType;\r\n\r\n        return headers;\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + \"$batch\";\r\n        var queryString = this._getQueryString(this.urlOptions);\r\n\r\n        if (queryString) {\r\n            url += queryString\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    _parseResponse(http) {\r\n        var context = {\r\n            position: 0,\r\n            boundaries: []\r\n        };\r\n\r\n        var pos = context.position;\r\n        var partHeaders = this._readHeaders(http.getAllResponseHeaders(), context);\r\n        var partContentType = this._contentType(partHeaders[\"content-type\"]);\r\n        if (partContentType && partContentType.mediaType == \"multipart/mixed\") {\r\n            context.boundaries.push((partContentType.properties as any).boundary);\r\n        }\r\n\r\n        context.position = pos;\r\n\r\n        var batchResponse = this._parseBatchResponse(http.responseText, context);\r\n        var responseParsed = [];\r\n        for (var i = 0; i < batchResponse.length; i++) {\r\n            try {\r\n                var finalResult = null;\r\n\r\n                var singleResponse = batchResponse[i];\r\n                var changesets = singleResponse.__changeResponses;\r\n                if (changesets) {\r\n                    finalResult = [];\r\n\r\n                    for (var j = 0; j < changesets.length; j++) {\r\n                        var changeset = changesets[j];\r\n                        var response = changeset.response;\r\n                        var responseResult = this._getResponseResult(response);\r\n                        finalResult.push(responseResult);\r\n                    }\r\n                } else {\r\n                    var response = singleResponse.response;\r\n                    finalResult = this._getResponseResult(response);\r\n                }\r\n\r\n                var statusCodeCheck = function (r) {\r\n                    return r.statusCode >= 400;\r\n                };\r\n\r\n                var isSuccessful = Array.isArray(finalResult) ?\r\n                    finalResult.filter(statusCodeCheck).length === 0 :\r\n                    !statusCodeCheck(finalResult);\r\n\r\n                responseParsed.push({ isSuccessful: isSuccessful, response: finalResult });\r\n            }\r\n            catch (e) {\r\n                // TODO: why continue ?\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var isSuccessfulCheck = (r) => {\r\n            return !r.isSuccessful;\r\n        };\r\n\r\n        var batchIsSuccessful = responseParsed.filter(isSuccessfulCheck).length === 0;\r\n        return { data: responseParsed, isSuccessful: batchIsSuccessful };\r\n    }\r\n\r\n    _parseBatchResponse(text, context) {\r\n        // get boundary from response\r\n        var delimiter = \"--\" + this._currentBoundary(context);\r\n        this._readTo(text, delimiter, context);\r\n        this._readLine(text, context);\r\n\r\n        var responses = [];\r\n        var partEnd;\r\n        while (partEnd !== \"--\" && context.position < text.length) {\r\n            var partHeaders = this._readHeaders(text, context);\r\n            var partContentType = this._contentType(partHeaders[\"content-type\"]);\r\n            var changeResponses;\r\n            if (partContentType && partContentType.mediaType === \"multipart/mixed\") {\r\n                context.boundaries.push((partContentType.properties as any).boundary);\r\n\r\n                try {\r\n                    changeResponses = this._parseBatchResponse(text, context);\r\n                } catch (e) {\r\n                    e.response = this._readResponse(text, context, delimiter);\r\n                    changeResponses = [e];\r\n                }\r\n                responses.push({ __changeResponses: changeResponses });\r\n                context.boundaries.pop();\r\n                this._readTo(text, \"--\" + this._currentBoundary(context), context);\r\n            } else {\r\n                if (!partContentType || partContentType.mediaType !== \"application/http\") {\r\n                    throw { message: \"invalid MIME part type \" };\r\n                }\r\n                // Skip empty line\r\n                this._readLine(text, context);\r\n\r\n                // Read the response\r\n                var response: any = this._readResponse(text, context, delimiter);\r\n\r\n                try {\r\n                    if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                        response = { message: response.statusCode + \" Http request is OK\", response: response };\r\n                    } else {\r\n                        // Keep track of failed responses and continue processing the batch.\r\n                        response = { message: \"HTTP request failed\", response: response };\r\n                    }\r\n                } catch (e) {\r\n                    response = e;\r\n                }\r\n\r\n                responses.push(response);\r\n            }\r\n\r\n            partEnd = text.substr(context.position, 2);\r\n\r\n            // Ignore the incoming line.\r\n            this._readLine(text, context);\r\n        }\r\n\r\n        return responses;\r\n    }\r\n\r\n    _getResponseResult(response) {\r\n        var responseBody = response.body;\r\n        var data = utils.parseStringToJson(responseBody);\r\n\r\n        return {\r\n            data: data,\r\n            statusCode: response.statusCode,\r\n            headers: response.headers\r\n        };\r\n    }\r\n\r\n    _currentBoundary(context) {\r\n        var boundaries = context.boundaries;\r\n        return boundaries[boundaries.length - 1];\r\n    }\r\n\r\n    _contentType(str) {\r\n\r\n        if (!str) {\r\n            return null;\r\n        }\r\n\r\n        var contentTypeParts = str.split(\";\");\r\n        var properties = {};\r\n\r\n        var i, len;\r\n        for (i = 1, len = contentTypeParts.length; i < len; i++) {\r\n            var contentTypeParams = contentTypeParts[i].split(\"=\");\r\n            properties[contentTypeParams[0].replace(/^\\s+|\\s+$/g, '')] = contentTypeParams[1];\r\n        }\r\n\r\n        return { mediaType: contentTypeParts[0].replace(/^\\s+|\\s+$/g, ''), properties: properties };\r\n    }\r\n\r\n    _readTo(text, str, context) {\r\n        var start = context.position || 0;\r\n        var end = text.length;\r\n        if (str) {\r\n            end = text.indexOf(str, start);\r\n            if (end === -1) {\r\n                return null;\r\n            }\r\n            context.position = end + str.length;\r\n        } else {\r\n            context.position = end;\r\n        }\r\n\r\n        return text.substring(start, end);\r\n    }\r\n\r\n    _readLine(text, context) {\r\n        return this._readTo(text, BatchRequest.constants.newLine, context);\r\n    }\r\n\r\n    _readHeaders(text, context) {\r\n        var headers = {};\r\n        var parts;\r\n        var line;\r\n        var pos;\r\n\r\n        do {\r\n            pos = context.position;\r\n            line = this._readLine(text, context);\r\n            parts = this.responseHeaderRegex.exec(line);\r\n            if (parts !== null) {\r\n                headers[parts[1].toLowerCase()] = parts[2];\r\n            } else {\r\n                // Whatever was found is not a header, so reset the context position.\r\n                context.position = pos;\r\n            }\r\n        } while (line && parts);\r\n\r\n        return headers;\r\n    }\r\n\r\n    _readResponse(text, context, delimiter) {\r\n        // Read the status line.\r\n        var pos = context.position;\r\n        var match = this.responseStatusRegex.exec(this._readLine(text, context));\r\n\r\n        var statusCode;\r\n        var statusText;\r\n        var headers;\r\n\r\n        if (match) {\r\n            statusCode = match[1];\r\n            statusText = match[2];\r\n            headers = this._readHeaders(text, context);\r\n            this._readLine(text, context);\r\n        } else {\r\n            context.position = pos;\r\n        }\r\n\r\n        return {\r\n            statusCode: statusCode,\r\n            statusText: statusText,\r\n            headers: headers,\r\n            body: this._readTo(text, \"\\r\\n\" + delimiter, context)\r\n        };\r\n    }\r\n\r\n    _buildRequestBody() {\r\n        var builder = new BlobBuilder();\r\n        builder.append('');\r\n\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n\r\n            var request = this._requests[index].request;\r\n            if (index != 0)\r\n                builder.append(BatchRequest.constants.newLine + BatchRequest.constants.newLine);\r\n\r\n            builder.append(\"--\" + this.boundary);\r\n\r\n            if (request instanceof Transaction) {\r\n                builder.append(this._buildTransaction(request));\r\n            }\r\n            else {\r\n                builder.append(this._buildRequest(request));\r\n            }\r\n        }\r\n\r\n        builder.append(this._createDelimeter(this.boundary, true));\r\n        return builder.build();\r\n    }\r\n\r\n    _buildRequest(request) {\r\n        var builder = new BlobBuilder();\r\n        builder.append(BatchRequest.constants.newLine + 'Content-Type: application/http' +\r\n                    BatchRequest.constants.newLine + 'Content-Transfer-Encoding: binary' +\r\n                    BatchRequest.constants.newLine +\r\n                    BatchRequest.constants.newLine +\r\n                    request._getMethod() +\r\n                    ' ' + request._buildUrl() + ' HTTP/1.1');\r\n\r\n        return builder.build();\r\n    }\r\n\r\n    _buildTransaction(transaction) {\r\n        if (transaction._requests.length == 0)\r\n            return;\r\n\r\n        var builder = new BlobBuilder();\r\n        builder.append(BatchRequest.constants.newLine);\r\n\r\n        var changeset = this._createBoundary(\"sf_changeset_\");\r\n        builder.append('Content-Type: multipart/mixed; boundary=' + changeset);\r\n\r\n        var changesetRequests = transaction._requests;\r\n        for (var index = 0; index < changesetRequests.length; index += 1) {\r\n            var currentRequest = changesetRequests[index].request;\r\n\r\n            builder.append(this._createDelimeter(changeset, false) +\r\n                        BatchRequest.constants.newLine + 'Content-Type: application/http' +\r\n                        BatchRequest.constants.newLine + 'Content-Transfer-Encoding: binary' +\r\n                        BatchRequest.constants.newLine + 'Content-ID: ' + changesetRequests[index].id);\r\n\r\n            var requestUrl = currentRequest._buildUrl();\r\n            builder.append('\\r\\n\\r\\n' + currentRequest._getMethod() + ' ' + requestUrl + ' HTTP/1.1');\r\n\r\n            var headers = currentRequest._getHeaders();\r\n            var headerNames = Object.keys(headers);\r\n            for (var i = 0; i < headerNames.length; i++) {\r\n                var headerName = headerNames[i];\r\n                builder.append(BatchRequest.constants.newLine + headerName + \": \" + headers[headerName]);\r\n            }\r\n\r\n            var body = currentRequest._getBody();\r\n            if (body) {\r\n                builder.append('\\r\\n\\r\\n');\r\n                builder.append(body);\r\n            }\r\n        }\r\n\r\n        builder.append(this._createDelimeter(changeset, true));\r\n\r\n        return builder.build();\r\n    }\r\n\r\n    _createDelimeter(boundary, close) {\r\n        var result = BatchRequest.constants.newLine +\r\n            BatchRequest.constants.newLine\r\n            + \"--\" + boundary;\r\n        if (close)\r\n            result += \"--\";\r\n        return result;\r\n    }\r\n\r\n    _createBoundary(prefix) {\r\n        return prefix + utils.hex16() + '-' + utils.hex16() + '-' + utils.hex16();\r\n    }\r\n\r\n    addRequest(request) {\r\n        return Transaction.prototype.addRequest(this, request);\r\n    }\r\n\r\n    urlParametersClone(entitySet) {\r\n        return Transaction.prototype.urlParametersClone.call(this, entitySet);\r\n    }\r\n\r\n}\r\nmodule.exports = BatchRequest;\r\n","import { RequestBase } from './Request';\r\nimport { utils } from '../utils';\r\n\r\nvar headerNames = require(\"../Headers\").headerNames;\r\nvar XMLHttpRequestDone = 4;\r\n\r\nfunction isFunction(func) {\r\n    return typeof func === 'function';\r\n}\r\n\r\nexport class ExecutableRequest {\r\n    private request: RequestBase;\r\n    private handlers: any;\r\n    private token: any;\r\n    private enableUnlimitedChoices: boolean;\r\n\r\n    constructor(options: any) {\r\n        this.request = options.request;\r\n        this.handlers = options.handlers;\r\n        this.token = options.token;\r\n        this.enableUnlimitedChoices = options.enableUnlimitedChoices;\r\n    }\r\n\r\n    execute() {\r\n        this._execute();\r\n    }\r\n\r\n    _execute() {\r\n        var http = new XMLHttpRequest();\r\n\r\n        http.onreadystatechange = () => {\r\n            if (http.readyState === XMLHttpRequestDone) {\r\n                if (http.status > 0) {\r\n                    var data = this.request._parseResponse(http);\r\n\r\n                    if (http.status >= 200 && http.status <= 206) {\r\n\r\n                        if (isFunction(this.request.successCb)) {\r\n                            this.request.successCb(data);\r\n                        }\r\n\r\n                        if (this.handlers && isFunction(this.handlers.successCb)) {\r\n                            this.handlers.successCb(data);\r\n                        }\r\n                    }\r\n                    else if (http.status >= 400) {\r\n                        // When the data is string, we save the string as message\r\n                        // and convert the data to normal object with message property\r\n                        if (utils.isString(data)) {\r\n                            var message = data;\r\n                            data = {\r\n                                message: message\r\n                            };\r\n                        }\r\n\r\n                        data.status = http.status;\r\n\r\n                        // in case of errors we would like there to be one handler for all of the errors\r\n                        if (isFunction(this.request.failureCb)) {\r\n                            this.request.failureCb(data);\r\n                        }\r\n\r\n                        if (this.handlers && isFunction(this.handlers.failureCb)) {\r\n                            this.handlers.failureCb(data);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (isFunction(this.request.progressCb)) {\r\n            if (http.upload) {\r\n                var that = this;\r\n                http.upload.onprogress = function (event) {\r\n                    that.request.progressCb(event);\r\n                };\r\n            }\r\n        }\r\n\r\n        var method = this._getMethod();\r\n        var url = this._buildUrl();\r\n        http.open(method, url, true);\r\n        this.setHeaders(http, this._getHeaders());\r\n\r\n        http.send(this._getBody());\r\n    }\r\n\r\n    setHeaders(http: any, headers: any) {\r\n        var headerKeys = Object.keys(headers);\r\n        for (var i = 0; i < headerKeys.length; i++) {\r\n            var currentHeaderName = headerKeys[i];\r\n            http.setRequestHeader(currentHeaderName, headers[currentHeaderName]);\r\n        }\r\n\r\n        if (this.token) {\r\n            if (typeof this.token === 'string') {\r\n                // for backward compatibility\r\n                http.setRequestHeader(headerNames.authorization, this.token);\r\n            } else {\r\n                http.setRequestHeader(headerNames.authorization, this.token.type + \" \" + this.token.value);\r\n            }\r\n        }\r\n\r\n        if (this.enableUnlimitedChoices) {\r\n            http.setRequestHeader(headerNames.choicesBinaryRepresentation, true);\r\n        }\r\n\r\n        // for backward compatibility\r\n        http.setRequestHeader(headerNames.serviceRequest, \"true\");\r\n    }\r\n\r\n    _getBody() {\r\n        var body = utils.serializeToJSON(this.request._getBody());\r\n        return body;\r\n    }\r\n\r\n    _getMethod = function() {\r\n        return this.request._getMethod();\r\n    }\r\n\r\n    _getHeaders = function () {\r\n        return this.request._getHeaders();\r\n    }\r\n\r\n    _getQueryString = function (urlOptions: any) {\r\n        return this.request._getQueryString(urlOptions);\r\n    }\r\n\r\n    _buildUrl = function () {\r\n        return this.request._buildUrl();\r\n    }\r\n}\r\n","import { utils } from '../utils';\r\n\r\nvar constants = require(\"../constants\").default;\r\nvar headerNames = require(\"../Headers\").headerNames;\r\nvar contentTypes = require(\"../ContentTypes\").default;\r\nvar httpMethods = require(\"../HttpMethods\").default;\r\n\r\nexport class RequestBase {\r\n    public successCb: (data: any) => void;\r\n    public failureCb: (data: any) => void;\r\n    public progressCb: any;\r\n    public key: string;\r\n    private action: string;\r\n    private _fallbackProperties: string[];\r\n    public urlOptions: any;\r\n\r\n    constructor (options: any) {\r\n        this.successCb = options.successCb;\r\n        this.failureCb = options.failureCb;\r\n        this.urlOptions = options.urlOptions;\r\n        this.progressCb = options.progressCb;\r\n        this.key = options.key;\r\n        this.action = options.action;\r\n        this._fallbackProperties = options.fallbackProperties;\r\n    }\r\n\r\n    _getBody() {\r\n        return undefined;\r\n    }\r\n\r\n    _getMethod() {\r\n        return null;\r\n    }\r\n\r\n    _getHeaders(): any {\r\n        var headers = {};\r\n        headers[headerNames.contentType] = contentTypes.json;\r\n        return headers;\r\n    }\r\n\r\n    _getQueryParameters(paramDictionary: any, urlOptions: any) {\r\n        var clause = constants.SfParams;\r\n        if (urlOptions.SFParams) {\r\n            var sfParams = urlOptions.SFParams;\r\n            if (sfParams.provider) {\r\n                paramDictionary[clause.provider] = sfParams.provider;\r\n            }\r\n\r\n            if (sfParams.culture) {\r\n                paramDictionary[clause.culture] = sfParams.culture;\r\n            }\r\n\r\n            if (sfParams.siteId) {\r\n                paramDictionary[clause.siteId] = sfParams.siteId;\r\n            }\r\n        }\r\n\r\n        if (this._fallbackProperties) {\r\n            paramDictionary[\"sf_fallback_prop_names\"] = this._fallbackProperties.join();\r\n        }\r\n    }\r\n\r\n    _getQueryString(urlOptions: any) {\r\n        var paramDictionary = {};\r\n\r\n        this._getQueryParameters(paramDictionary, urlOptions);\r\n        var keys = Object.keys(paramDictionary);\r\n        if (keys.length == 0)\r\n            return null;\r\n\r\n        var queryString = \"?\";\r\n        for (var prop in paramDictionary) {\r\n            queryString += prop + \"=\" + paramDictionary[prop] + \"&\";\r\n        }\r\n\r\n        queryString = queryString.substring(0, queryString.length - 1);\r\n\r\n        return queryString;\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + (this.urlOptions.entitySet || \"\");\r\n        url += this.key ? (\"(\" + this.key + \")\") : \"\";\r\n        if (this.action) {\r\n            url += url.endsWith(\"/\") ? \"\" : \"/\";\r\n            url += this.action;\r\n        }\r\n\r\n        // including count here\r\n        // not the best solution as build() is called once more in getQueryString\r\n        // but not that big of an issue right now\r\n        if (this.urlOptions.ODataParams) {\r\n            var getCount = this.urlOptions.ODataParams.build().$count;\r\n\r\n            if (utils.isBoolean(getCount) && !getCount) {\r\n                url += \"/$count\";\r\n            }\r\n        }\r\n\r\n        return this._addQueryParameters(url);\r\n    }\r\n\r\n    _parseResponse(http: any) {\r\n        var data = utils.parseStringToJson(http.responseText);\r\n        if (data) {\r\n            if (http.status >= 400 && data.error) {\r\n                return data.error;\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        return http.responseText;\r\n    }\r\n\r\n    _addQueryParameters (url: string) {\r\n        var queryString = this._getQueryString(this.urlOptions);\r\n\r\n        if (queryString) {\r\n            if (url.indexOf(\"?\") > -1 && queryString[0] == \"?\") {\r\n                queryString = \"&\" + queryString.substring(1);\r\n            }\r\n\r\n            url += queryString;\r\n        }\r\n\r\n        return url;\r\n    }\r\n}\r\n\r\nexport class GetRequest extends RequestBase {\r\n    constructor(options: any) {\r\n        super(options);\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Get;\r\n    }\r\n\r\n    _getQueryParameters(paramDictionary: any, urlOptions: any) {\r\n        var clause = constants.ODataParams;\r\n\r\n        if (urlOptions.ODataParams) {\r\n            var query = urlOptions.ODataParams.build();\r\n            if (utils.isString(query.$filter))\r\n                paramDictionary[clause.$filter] = query.$filter;\r\n            if (utils.isString(query.$select))\r\n                paramDictionary[clause.$select] = query.$select;\r\n            if (utils.isString(query.$expand))\r\n                paramDictionary[clause.$expand] = query.$expand;\r\n            if (utils.isString(query.$orderby))\r\n                paramDictionary[clause.$orderby] = query.$orderby;\r\n            if (utils.isNumber(query.$skip))\r\n                paramDictionary[clause.$skip] = query.$skip;\r\n            if (utils.isNumber(query.$top))\r\n                paramDictionary[clause.$top] = query.$top;\r\n            if (utils.isString(query.$search))\r\n                paramDictionary[clause.$search] = query.$search;\r\n\r\n            // inline count\r\n            if (utils.isBoolean(query.$count) && query.$count)\r\n                paramDictionary[clause.$count] = query.$count;\r\n        }\r\n\r\n        super._getQueryParameters(paramDictionary, urlOptions);\r\n    }\r\n}\r\n\r\nexport class GetByIdRequest extends RequestBase {\r\n    constructor(options: any) {\r\n        super(options);\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Get;\r\n    }\r\n\r\n    _getQueryParameters(paramDictionary, urlOptions) {\r\n        var clause = constants.ODataParams;\r\n\r\n        if (urlOptions.ODataParams) {\r\n            var query = urlOptions.ODataParams.build();\r\n            if (utils.isString(query.$select))\r\n                paramDictionary[clause.$select] = query.$select;\r\n            if (utils.isString(query.$expand))\r\n                paramDictionary[clause.$expand] = query.$expand;\r\n        }\r\n\r\n        super._getQueryParameters(paramDictionary, urlOptions);\r\n    }\r\n}\r\n\r\nexport class DeleteRequest extends RequestBase {\r\n    constructor(options: any) {\r\n        super(options);\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Delete;\r\n    }\r\n}\r\n\r\nexport class UpdateRequest extends RequestBase {\r\n    private _data: any;\r\n    private _saveTemp: any;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this._data = options.data;\r\n        this._saveTemp = options.saveTemp;\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Patch;\r\n    }\r\n\r\n    _getBody() {\r\n        var body = utils.convertDateFieldToISOString(this._data);\r\n        return body;\r\n    }\r\n\r\n    _getHeaders() {\r\n        var headers = RequestBase.prototype._getHeaders.call(this);\r\n        if (this._saveTemp) {\r\n            headers[headerNames.operation] = \"SaveTemp\";\r\n        }\r\n\r\n        return headers;\r\n    }\r\n}\r\n\r\nexport class CreateRequest extends RequestBase {\r\n    public _data: any;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this._data = options.data;\r\n    }\r\n\r\n    _getMethod() {\r\n        return httpMethods.Post;\r\n    }\r\n\r\n    _getBody() {\r\n        var body = utils.convertDateFieldToISOString(this._data);\r\n        return body;\r\n    }\r\n}\r\n\r\nexport class GetRelatedRequest extends GetByIdRequest {\r\n    private navigationProperty: string;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.navigationProperty = options.navigationProperty;\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty;\r\n        return this._addQueryParameters(url);\r\n    }\r\n}\r\n\r\nexport class GetRelatedByIdRequest extends GetByIdRequest {\r\n    private navigationProperty: string;\r\n    private relatedKey: string;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.navigationProperty = options.navigationProperty;\r\n        this.relatedKey = options.relatedKey;\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"(\" + this.relatedKey + \")\";\r\n        return this._addQueryParameters(url);\r\n    }\r\n}\r\n\r\nexport class DeleteRelatedRequest extends DeleteRequest {\r\n    private navigationProperty: string;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.navigationProperty = options.navigationProperty;\r\n    }\r\n\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"/$ref\"\r\n        return this._addQueryParameters(url);\r\n    }\r\n}\r\n\r\nexport class DeleteRelatedByIdRequest extends DeleteRequest {\r\n    private navigationProperty: string;\r\n    private relatedKey: string;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.navigationProperty = options.navigationProperty;\r\n        this.relatedKey = options.relatedKey\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"(\" + this.relatedKey + \")/$ref\";\r\n        return this._addQueryParameters(url);\r\n    }\r\n}\r\n\r\nexport class CreateRelatedRequest extends CreateRequest {\r\n    private navigationProperty: string;\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.navigationProperty = options.navigationProperty;\r\n        this.key = options.key;\r\n    }\r\n\r\n    _buildUrl() {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"/$ref\";\r\n        return this._addQueryParameters(url);\r\n    }\r\n}\r\n\r\n\r\nexport class UploadRequest extends CreateRequest {\r\n    private fileName: any;\r\n    private uploadProperties: any;\r\n    private contentType: any;\r\n\r\n    constructor(options: any) {\r\n        super(options);\r\n        this.fileName = options.fileName;\r\n        this.uploadProperties = options.uploadProperties;\r\n        this.contentType = options.contentType;\r\n    }\r\n\r\n    _getHeaders() {\r\n        var headers = super._getHeaders();\r\n        headers[headerNames.contentType] = this.contentType || \"application/octet-stream\";\r\n        headers[headerNames.fileName] = this.fileName;\r\n        headers[headerNames.properties] = this.uploadProperties;\r\n        headers[headerNames.contentEncoding] = \"identity\";\r\n        return headers;\r\n    }\r\n\r\n    _getBody() {\r\n        return this._data;\r\n    }\r\n\r\n    _getMethod() {\r\n        if (this.key) {\r\n            return httpMethods.Patch;\r\n        }\r\n\r\n        return httpMethods.Post;\r\n    }\r\n}\r\n","import { GetRequest, GetByIdRequest, CreateRequest, UpdateRequest, DeleteRequest, GetRelatedRequest, GetRelatedByIdRequest, DeleteRelatedRequest, DeleteRelatedByIdRequest, CreateRelatedRequest, UploadRequest } from \"./Request\";\r\nimport { ExecutableRequest } from './ExecutableRequest';\r\n\r\nvar BatchRequest = require('./BatchRequest');\r\n\r\nexport class RequestFactory {\r\n    public token: any;\r\n    private handlers: any;\r\n    private enableUnlimitedChoices: boolean;\r\n\r\n    constructor(options: any) {\r\n        this.token = null;\r\n        this.handlers = options.handlers;\r\n        this.enableUnlimitedChoices = options.enableUnlimitedChoices;\r\n    }\r\n\r\n    get(parameters: any) {\r\n        return this.createExecutor(new GetRequest(parameters));\r\n    }\r\n\r\n    getSingle(parameters: any) {\r\n        return this.createExecutor(new GetByIdRequest(parameters));\r\n    }\r\n\r\n    create(parameters: any) {\r\n        return this.createExecutor(new CreateRequest(parameters));\r\n    }\r\n\r\n    update(parameters: any) {\r\n        return this.createExecutor(new UpdateRequest(parameters));\r\n    }\r\n\r\n    destroy(parameters: any) {\r\n        return this.createExecutor(new DeleteRequest(parameters));\r\n    }\r\n\r\n    getProperty(parameters: any) {\r\n        return this.createExecutor(new GetRelatedRequest(parameters));\r\n    }\r\n\r\n    getRelated(parameters: any) {\r\n        return this.createExecutor(new GetRelatedRequest(parameters));\r\n    }\r\n\r\n    getRelatedById(parameters: any) {\r\n        return this.createExecutor(new GetRelatedByIdRequest(parameters));\r\n    }\r\n\r\n    destroyRelated(parameters: any) {\r\n        return this.createExecutor(new DeleteRelatedRequest(parameters));\r\n    }\r\n\r\n    destroyRelatedById(parameters: any) {\r\n        return this.createExecutor(new DeleteRelatedByIdRequest(parameters));\r\n    }\r\n\r\n    createRelated(parameters: any) {\r\n        return this.createExecutor(new CreateRelatedRequest(parameters));\r\n    }\r\n\r\n    batch(parameters) {\r\n        parameters._factory = this;\r\n        return new BatchRequest(parameters);\r\n    }\r\n\r\n    upload(parameters: any) {\r\n        return this.createExecutor(new UploadRequest(parameters));\r\n    }\r\n\r\n    createExecutor(request: any) {\r\n        var executor = new ExecutableRequest({\r\n            request: request,\r\n            handlers: this.handlers || {},\r\n            token: this.token,\r\n            enableUnlimitedChoices: this.enableUnlimitedChoices\r\n        });\r\n\r\n        // TODO\r\n        (executor as any).navigationProperty = request.navigationProperty;\r\n        return executor;\r\n    }\r\n}\r\n","import { RequestFactory } from './Requests/RequestFactory';\r\nimport { Authentication } from './Authentication';\r\nimport { Data } from './Data';\r\nimport { Query } from './Query';\r\nimport { utils } from './utils';\r\n\r\n/**\r\n* @class Sitefinity\r\n* @classdesc The constructor of the Sitefinity JavaScript SDK. This is the entry point for the SDK.\r\n* @property {Object} authentication - The authentication object used for authenticating to Sitefinity. See {@link Authentication}\r\n* @param {object} options - An object containing configuration options for the Setup object.\r\n* @param {string} options.serviceUrl - Your service url that points to the configured instance of Sitefinity service.\r\n* @param {string} options.siteId - The ID of the site, for which the query will be executed.\r\n* @param {string} options.handlers - The global handlers for request execution\r\n* @param {string} options.handlers.successCb - The success handler.\r\n* @param {string} options.handlers.failureCb - The failure handler.\r\n*/\r\nexport class Sitefinity {\r\n    private factory: RequestFactory;\r\n    private authentication: Authentication;\r\n    private profileUrl: string;\r\n    private siteId: string;\r\n    public static Query: typeof Query = Query;\r\n\r\n    constructor(options: any) {\r\n        this.profileUrl = utils.addTrailingSlash(options.serviceUrl);\r\n        this.siteId = options.siteId;\r\n        this.factory = new RequestFactory({\r\n            handlers: options.handlers,\r\n            enableUnlimitedChoices: options.enableUnlimitedChoices\r\n        });\r\n\r\n        this.authentication = new Authentication({\r\n            serviceUrl: this.profileUrl,\r\n            factory: this.factory\r\n        });\r\n    }\r\n\r\n    /**\r\n* Creates a new {@link Data} class.\r\n* @memberOf Sitefinity\r\n* @instance\r\n* @param {object} options - An object containing configuration options for the Setup object.\r\n* @param {string} options.urlName - The URL name of the type..\r\n* @param {string} [options.providerName] - The name of the provider. If empty the default provider for the site will be used.\r\n* @param {string} [options.cultureName] - The name of the culture. If empty the default culture for the site will be used.\r\n* @example\r\n* var data = sf.data({\r\n*     urlName: \"newsitems\",\r\n*     providerName: \"OpenAccessDataProvider\",\r\n*     cultureName: \"en\"\r\n* });\r\n* @returns {Data}\r\n*/\r\n    data(options: any) {\r\n        var optionsServiceUrl = options.serviceUrl ? utils.addTrailingSlash(options.serviceUrl) : options.serviceUrl;\r\n        var dataOptions = {\r\n            baseUrl: optionsServiceUrl || this.profileUrl,\r\n            SFParams: {\r\n                provider: options.providerName,\r\n                culture: options.cultureName,\r\n                siteId: options.siteId || this.siteId\r\n            },\r\n            entitySet: options.urlName\r\n        }\r\n\r\n        this.factory.token = this.authentication.getToken();\r\n        return new Data(dataOptions, this.factory);\r\n    }\r\n\r\n    /**\r\n    * Creates a new {@link BatchRequest} class. OData batch requests -> {@link http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793748}\r\n    * @memberOf Sitefinity\r\n    * @instance\r\n    * @param {Function} success - The success callback of the batch execution.\r\n    * @param {string} options.urlName - The URL name of the type..\r\n    * @param {string} [options.providerName] - The name of the provider. If empty the default provider for the site will be used.\r\n    * @param {string} [options.cultureName] - The name of the culture. If empty the default culture for the site will be used.\r\n    * @example\r\n    * var sf = new Sitefinity({\r\n    *   serviceUrl: 'http://mydomain/route/service/'\r\n    * });\r\n    *\r\n    * var batch = sf.batch(successCbBatch, failureCb);\r\n    * batch.get({\r\n    *     entitySet: entitySet,\r\n    *     query: query8\r\n    * });\r\n    *\r\n    * var transaction = batch.beginTransaction();\r\n    * var createId = transaction.create({\r\n    *     entitySet: entitySet,\r\n    *     data: newsItem\r\n    * });\r\n    *\r\n    * batch.endTransaction(transaction);\r\n    *\r\n    * var transaction2 = batch.beginTransaction();\r\n    * var createId2 = transaction2.create({\r\n    *     entitySet: entitySet,\r\n    *     data: newsItem\r\n    * });\r\n    *\r\n    * var updateId2 = transaction2.update({\r\n    *     entitySet: entitySet,\r\n    *     key: createId2,\r\n    *     data: newsItemUpdate\r\n    * });\r\n    *\r\n    * batch.endTransaction(transaction2);\r\n    *\r\n    * batch.get({\r\n    *     entitySet: entitySet\r\n    * });\r\n    *\r\n    * batch.execute();\r\n    * @returns {BatchRequest}\r\n    */\r\n    batch(success: any, failure: any, progress: any, options: any) {\r\n        if (typeof progress !== 'function') {\r\n            options = progress;\r\n            progress = null;\r\n        }\r\n\r\n        if (!options)\r\n            options = {};\r\n\r\n        this.factory.token = this.authentication.getToken();\r\n\r\n        var optionsServiceUrl = options.serviceUrl ? utils.addTrailingSlash(options.serviceUrl) : options.serviceUrl;\r\n        var batch = this.factory.batch({\r\n            successCb: success,\r\n            failureCb: failure,\r\n            progressCb: progress,\r\n            urlOptions: {\r\n                baseUrl: optionsServiceUrl || this.profileUrl,\r\n                SFParams: {\r\n                    provider: options.providerName,\r\n                    culture: options.cultureName,\r\n                    siteId: options.siteId || this.siteId\r\n                }\r\n            }\r\n        });\r\n\r\n        var executor: any = this.factory.createExecutor(batch);\r\n        executor.beginTransaction = () => {\r\n            return batch.beginTransaction();\r\n        }\r\n\r\n        executor.endTransaction = (transaction) => {\r\n            batch.endTransaction(transaction);\r\n        }\r\n\r\n        executor.get = (options) => {\r\n            batch.constructor.prototype.get.call(batch, options);\r\n        }\r\n\r\n        executor.getOperations = (options) => {\r\n            batch.constructor.prototype.getOperations.call(batch, options);\r\n        }\r\n\r\n        executor.getSingle = (options) => {\r\n            batch.constructor.prototype.getSingle.call(batch, options);\r\n        }\r\n\r\n        executor.getProperty = (options) => {\r\n            batch.constructor.prototype.getProperty.call(batch, options);\r\n        }\r\n\r\n        executor.getRelated = (options) => {\r\n            batch.constructor.prototype.getRelated.call(batch, options);\r\n        }\r\n\r\n        executor.getRelatedById = (options) => {\r\n            batch.constructor.prototype.getRelatedById.call(batch, options);\r\n        }\r\n\r\n        return executor;\r\n    }\r\n}\r\n","import { ComplexExpression, BinaryExpression } from './Expression';\r\nconst OperatorType = require('./constants').default.ExpressionType;\r\n\r\n/**\r\n * @classdesc A fluent API operation for creating a filter for a query by chaining different rules.\r\n * @class WhereQuery\r\n * @protected\r\n */\r\nexport class WhereQuery {\r\n\r\n    private expression: ComplexExpression;\r\n    constructor(private parent: any, type: string = OperatorType.and) {\r\n        this.expression = new ComplexExpression(type, []);\r\n    }\r\n\r\n     /**\r\n     * Adds an `and` clause to the current condition and returns it for further chaining.\r\n     * @method and\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    and(): WhereQuery {\r\n        return new WhereQuery(this, OperatorType.and);\r\n    }\r\n    /**\r\n     * Adds an `or` clause to the current condition and returns it for further chaining.\r\n     * @method or\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    or(): WhereQuery {\r\n        return new WhereQuery(this, OperatorType.or);\r\n    }\r\n\r\n    /**\r\n     * Adds an `any` clause to the current condition and returns it for further chaining.\r\n     * @method any\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    any(): WhereQuery {\r\n        return new WhereQuery(this, OperatorType.any);\r\n    }\r\n    /**\r\n     * Adds a `not` clause to the current condition and returns it for further chaining.\r\n     * @method not\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    not(): WhereQuery {\r\n        return new WhereQuery(this, OperatorType.not);\r\n    }\r\n\r\n    private _simple (type: string, parameter: string, constant: any): WhereQuery {\r\n        var currentExpr = new BinaryExpression(type, parameter, constant);\r\n        var subExpressions = this.expression.getExpressions();\r\n        subExpressions.push(currentExpr);\r\n\r\n        if (this.expression.getType() === OperatorType.not && subExpressions.length > 1)\r\n            throw new Error(\"Invalid operators count!\");\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds a condition that a field must be equal to a specific value.\r\n     * @method eq\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (to which the fields must be equal).\r\n     * @returns {WhereQuery}\r\n     */\r\n    eq(parameter: string, constant: any): WhereQuery {\r\n        return this._simple(OperatorType.eq, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field must *not* be equal to a specific value.\r\n     * @method ne\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (to which the field must not be equal).\r\n     * @returns {WhereQuery}\r\n     */\r\n    ne(parameter: string, constant: any): WhereQuery {\r\n        return this._simple(OperatorType.ne, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field must be `greater than` a certain value. Applicable to Number, String, and Date fields.\r\n     * @method gt\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be greater than).\r\n     * @returns {WhereQuery}\r\n     */\r\n    gt(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.gt, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field must be `greater than or equal` to a certain value. Applicable to Number, String, and Date fields.\r\n     * @method gte\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be greater than or equal to).\r\n     * @returns {WhereQuery}\r\n     */\r\n    gte(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.ge, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field must be `less than` a certain value. Applicable to Number, String, and Date fields.\r\n     * @method lt\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be less than).\r\n     * @returns {WhereQuery}\r\n     */\r\n    lt(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.lt, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field must be `less than or equal` to a certain value. Applicable to Number, String, and Date fields.\r\n     * @method lte\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be less than or equal to).\r\n     * @returns {WhereQuery}\r\n     */\r\n    lte(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.le, parameter, constant);\r\n    }\r\n    /**\r\n     * Adds a condition that a field value must *start* with a specified string.\r\n     * @method startsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should start with.\r\n     * @param {string} [options] A string of regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    startsWith(parameter: string, constant: any): WhereQuery {\r\n        return this._simple(OperatorType.startsWith, parameter, constant);\r\n    }\r\n\r\n    /**\r\n     * Adds a condition that a field value must *contain* a specified string.\r\n     * @method startsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should start with.\r\n     * @param {string} [options] A string of regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    contains(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.contains, parameter, constant);\r\n    }\r\n\r\n    /**\r\n     * Adds a condition that a field value must *end* with a specified string.\r\n     * @method endsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should end with.\r\n     * @param {string} [options] A string of  regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    endsWith(parameter: string, constant: any) {\r\n        return this._simple(OperatorType.endsWith, parameter, constant);\r\n    }\r\n\r\n    /**\r\n     * Ends the definition of the current WhereQuery. You need to call this method in order to continue with the definition of the parent {@link QueryBase}. All other `WhereQuery` methods return the current instance of `WhereQuery` to allow chaining.\r\n     * @method done\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {Query}\r\n     */\r\n    done() {\r\n        if (this.parent instanceof WhereQuery) {\r\n            this.parent._addComplexExpression(this);\r\n            // TODO: If has and() || or() must call done() twice\r\n            if (this.expression.getType() === OperatorType.not)\r\n                return this.parent;\r\n        }\r\n\r\n        return this.parent;\r\n    }\r\n\r\n    _getExpression () {\r\n        return this.expression;\r\n    }\r\n\r\n    private _addComplexExpression(subQuery): void {\r\n        var subExpression = subQuery._getExpression();\r\n        this.expression.getExpressions().push(subExpression);\r\n    }\r\n}\r\n","const constants = {\r\n    ExpressionType: {\r\n        query: 1,\r\n        where: 100,\r\n        and: 'and',\r\n        or: 'or',\r\n        not: 'not',\r\n        eq: 'eq',\r\n        ne: 'ne',\r\n        lt: 'lt',\r\n        le: 'le',\r\n        gt: 'gt',\r\n        ge: 'ge',\r\n        any: 'any',\r\n        /*isin: 126,\r\n        notin: 127,\r\n        all: 128,\r\n        size: 129,\r\n        regex: 130,*/\r\n        contains: 'contains',\r\n        startsWith: 'startsWith',\r\n        endsWith: 'endsWith'\r\n    },\r\n    ODataParams: {\r\n        $filter: '$filter',\r\n        $select: '$select',\r\n        $expand: '$expand',\r\n        $orderby: '$orderby',\r\n        $skip: '$skip',\r\n        $top: '$top',\r\n        $count: '$count',\r\n        $search: '$search'\r\n    },\r\n    SfParams: {\r\n        provider: 'sf_provider',\r\n        culture: 'sf_culture',\r\n        siteId: 'sf_site'\r\n    }\r\n};\r\n\r\nexport default constants;\r\n","import { Sitefinity } from \"./Sitefinity\";\r\nmodule.exports = Sitefinity;\r\n","export class utils {\r\n    static isString(obj: any): boolean {\r\n        return typeof (obj) === 'string' || obj instanceof String;\r\n    }\r\n\r\n    static isBoolean(obj: any): boolean {\r\n        return typeof (obj) === 'boolean';\r\n    }\r\n\r\n    static isBlob(obj: any): boolean {\r\n        return obj instanceof Blob;\r\n    };\r\n\r\n    static isNumber(value: any): boolean {\r\n        return typeof value === 'number' && isFinite(value);\r\n    };\r\n\r\n    static serializeToJSON(data): string {\r\n        if (!utils.isString(data) && !this.isBlob(data)) {\r\n            return JSON.stringify(data);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    static parseStringToJson(data) {\r\n        if (!data) {\r\n            return null;\r\n        }\r\n\r\n        var number = Number(data);\r\n        if (!isNaN(number)) {\r\n            return number;\r\n        }\r\n\r\n        var result = null;\r\n\r\n        try {\r\n            result = JSON.parse(data);\r\n            result = utils._parseDateProperties(result);\r\n        } catch (e) {\r\n            console.log(\"An unexpected error occurred while parsing the response from server: \" + e.message + \". Response body was: '\" + data + \"'\");\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static convertDateFieldToISOString = function (data) {\r\n        /*\r\n        TODOSDK: when write tests for this try to use\r\n        \"Object.keys(obj).forEach(function(){})\",\r\n        Phantomjs does not recognize \"for..in\" operator.\r\n        */\r\n        for (let obj in data) {\r\n            if (data[obj] instanceof Date) {\r\n                data[obj] = data[obj].toISOString();\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    static hex16() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substr(1);\r\n    }\r\n\r\n    static addTrailingSlash(url) {\r\n        url = utils.removeSlashes(url);\r\n        url += '/';\r\n        return url;\r\n    }\r\n\r\n    static removeSlashes(url) {\r\n        var ret = url;\r\n        var fistChar = ret.substr(0, 1);\r\n        if (fistChar == '/')\r\n            ret = ret.substr(1);\r\n\r\n        var lastChar = ret.substr(-1);\r\n        if (lastChar == '/')\r\n            ret = ret.substr(0, ret.length - 1);\r\n\r\n        return ret;\r\n    }\r\n\r\n    static clone(from: any, to = {}, action: Function = null): any {\r\n\r\n        if (!to)\r\n            to = {};\r\n\r\n        for (var property in from) {\r\n            if (from[property] && from[property].constructor && from[property].constructor === Object && typeof from[property] == 'function') {\r\n                to[property] = to[property]|| { };\r\n                arguments.callee(to[property], from[property]);\r\n            } else {\r\n                to[property] = from[property];\r\n            }\r\n\r\n            if (typeof action === 'function')\r\n                action(to);\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    private static _parseDateProperties(data) {\r\n        for (var obj in data) {\r\n            // TODO\r\n            if (data[obj] instanceof Array || (data[obj] instanceof Object && <any>!data[obj] instanceof Function))\r\n                this._parseDateProperties(data[obj]);\r\n            else\r\n                data[obj] = utils._tryFormatFieldToDate(data[obj]);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    private static _tryFormatFieldToDate(date) {\r\n        if ((/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/).test(date)) {\r\n            date = new Date(date);\r\n        }\r\n\r\n        return date;\r\n    }\r\n}\r\n"],"sourceRoot":""}