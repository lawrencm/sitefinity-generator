/**
* @class Authentication
* @classdesc The constructor of the Authentication object. This object is used for authenticating a user to Sitefinity.
* @param {object} options - An object containing configuration options for the {@Link Authentication} object.
* @param {string} options.serviceUrl - Your service url that points to the configured instance of Sitefinity service.
*/
export class Authentication {
    private _token: any;
    private _serviceUrl: string;
    private factory: any;

    constructor(options) {
        this._token = null;
        this._serviceUrl = options.serviceUrl;
        this.factory = options.factory;
    }

    /**
    * Logins the user. A service call is made to login the user. If the call is successful and the service returns a token, this token is cached in the {@link Authentication} object.
    * @memberOf Authentication
    * @instance
    * @param {string} username - The username.
    * @param {string} password - The password.
    * @param {Function} [success] - The success handler of the method.
    * @param {Function} [failure] - The error handler of the method.
    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0
    * @example
    * sf.authentication.login("username", "password", successCb, failureCb);
    */
    login(username: string, password: string, success: any, failure: any) {
        var that = this;
        var request = this.factory.create({
            data: {
                username: username,
                password: password
            },
            urlOptions: {
                baseUrl: that._serviceUrl + 'login'
            },
            successCb: function (data) {
                that.setToken(data.value);
                if (typeof success === 'function')
                    success(data.value);
            },
            failureCb: failure
        });

        request._execute();
    }

    /**
    * Logouts the user.
    * @memberOf Authentication
    * @instance
    * @param {Function} [success] - The success handler of the method.
    * @param {Function} [failure] - The error handler of the method.
    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0
    */
    logout(success: any, failure: any) {
        var that = this;
        var request = this.factory.create({
            urlOptions: {
                baseUrl: that._serviceUrl + 'logout',
                token: that.getToken()
            },
            successCb: function (data) {
                that.setToken(null);
                if (typeof success === 'function')
                    success(data);
            },
            failureCb: failure
        });
        request._execute();
    }


    /**
    * Sets the authentication token.
    * @memberOf Authentication
    * @instance
    * @param {string} token - The token, which will be used for authentication.
    */
    setToken(token: any) {
        this._token = token;
    }

    /**
    * Gets the authentication token.
    * @memberOf Authentication
    * @instance
    * @returns {string}
    */
    getToken() {
        return this._token;
    }
}
